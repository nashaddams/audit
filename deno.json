{
  "name": "@nashaddams/audit",
  "version": "0.18.0",
  "license": "MIT",
  "exports": "./mod.ts",
  "imports": {
    "@cliffy/command": "jsr:@cliffy/command@1.0.0-rc.7",
    "@deno/gfm": "jsr:@deno/gfm@0.10.0",
    "@octokit/plugin-rest-endpoint-methods": "npm:@octokit/plugin-rest-endpoint-methods@13.5.0",
    "@std/cli/unstable-spinner": "jsr:@std/cli@1.0.14/unstable-spinner",
    "@std/collections/intersect": "jsr:@std/collections@1.0.10/intersect",
    "@std/collections/partition": "jsr:@std/collections@1.0.10/partition",
    "@std/jsonc": "jsr:@std/jsonc@1.0.1",
    "@std/path": "jsr:@std/path@1.0.8",
    "@std/assert": "jsr:@std/assert@1.0.11",
    "@std/semver": "jsr:@std/semver@1.0.4",
    "@std/testing/bdd": "jsr:@std/testing@1.0.9/bdd",
    "@std/testing/mock": "jsr:@std/testing@1.0.9/mock",
    "@std/testing/snapshot": "jsr:@std/testing@1.0.9/snapshot"
  },
  "tasks": {
    "lint": "deno lint && deno fmt --check && deno publish --dry-run --allow-dirty",
    "build": "deno compile -RW=. -E=OUTPUT_DIR,CONFIG_FILE,GITHUB_TOKEN,NO_COLOR,FORCE_COLOR,TERM -N=api.jsr.io,cdn.deno.land,api.github.com,registry.npmjs.org,0.0.0.0 -o dist/audit mod.ts",
    "audit": "deno run -RW=. -E=OUTPUT_DIR,CONFIG_FILE,GITHUB_TOKEN,NO_COLOR,FORCE_COLOR,TERM -N=api.jsr.io,cdn.deno.land,api.github.com,registry.npmjs.org mod.ts",
    "report": "deno run -R=. -E=OUTPUT_DIR,CONFIG_FILE,GITHUB_TOKEN,NO_COLOR,FORCE_COLOR,TERM -N=0.0.0.0 mod.ts report",
    "test": "deno test -RW -E=OUTPUT_DIR,CONFIG_FILE,GITHUB_TOKEN,NO_COLOR,FORCE_COLOR,TERM -N=api.jsr.io,api.github.com,cdn.deno.land,registry.npmjs.org --coverage=cov",
    "coverage:lcov": "deno coverage --exclude=test --lcov cov > cov.lcov",
    "coverage:html": "deno coverage --html --exclude=test cov",
    "coverage:console": "deno coverage --exclude=test cov",
    "coverage": "deno task coverage:lcov && deno task coverage:html && deno task coverage:console",
    "coverage:report": {
      "command": "deno eval \"import { serveDir } from 'jsr:@std/http/file-server'; Deno.serve((req: Request) => serveDir(req, { fsRoot: 'cov/html' }));\"",
      "dependencies": ["coverage"]
    },
    "doc": "deno doc --html mod.ts && deno doc --lint mod.ts",
    "doc:report": {
      "command": "deno eval \"import { serveDir } from 'jsr:@std/http/file-server'; Deno.serve((req: Request) => serveDir(req, { fsRoot: 'docs' }));\"",
      "dependencies": ["doc"]
    }
  },
  "publish": {
    "include": [
      "mod.ts",
      "src/**/*.ts",
      "LICENSE",
      "README.md"
    ]
  },
  "lock": false
}
